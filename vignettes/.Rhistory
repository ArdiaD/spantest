knitr::opts_chunk$set(collapse = TRUE, comment = "#>")
library(spantest)
library(qrmdata)
# Load required packages
library(qrmdata)
library(spantest)
library(PerformanceAnalytics)
library(PerformanceAnalytics)
library(dplyr)
library(PerformanceAnalytics)
library(dplyr)
# Load S&P 500 return data (xts object)
data("SP500_const", package = "qrmdata")
library(dplyr)
# Load S&P 500 return data (xts object)
data("SP500_const", package = "qrmdata")
# Calculate total return per stock over the full sample
total_returns <- SP500_const %>%
apply(2, function(x) prod(1 + na.omit(x)) - 1) %>%
sort(decreasing = TRUE)
library(dplyr)
# Load S&P 500 return data (xts object)
data("SP500_const", package = "qrmdata")
# Calculate total return per stock over the full sample
total_returns <- SP500_const %>%
apply(2, function(x) prod(1 + na.omit(x)) - 1) %>%
sort(decreasing = TRUE)
# Select top 10 for R1, next 10 for R2
top_20_symbols <- names(total_returns)[1:20]
# Calculate total return per stock over the full sample
total_returns <- SP500_const %>%
apply(2, function(x) prod(1 + na.omit(x)) - 1) %>%
sort(decreasing = TRUE)
# Select top 10 for R1, next 10 for R2
top_20_symbols <- names(total_returns)[1:20]
R1_symbols <- top_20_symbols[1:10]
R1_symbols <- top_20_symbols[1:10]
R2_symbols <- top_20_symbols[11:20]
# Extract returns and align data
R1 <- SP500_const[, R1_symbols]
R2_symbols <- top_20_symbols[11:20]
# Extract returns and align data
R1 <- SP500_const[, R1_symbols]
R2 <- SP500_const[, R2_symbols]
R2_symbols <- top_20_symbols[11:20]
# Extract returns and align data
R1 <- SP500_const[, R1_symbols]
R2 <- SP500_const[, R2_symbols]
common_dates <- complete.cases(R1, R2)
R1 <- R1[common_dates, ]
R2 <- R2[common_dates, ]
R1
R1 <- CalculateReturns(R1, "discrete")
R2 <- CalculateReturns(R2, "discrete")
# Run spanning tests
f1_result <- span_f1(R1, R2)
f2_result <- span_f2(R1, R2)
f1_result
# Load required packages
library(qrmdata)
library(spantest)
library(PerformanceAnalytics)
library(dplyr)
# Load S&P 500 return data (xts object)
data("SP500_const", package = "qrmdata")
R1_symbols <- top_20_symbols[1:10]
R2_symbols <- top_20_symbols[11:20]
# Extract returns and align data
R1 <- SP500_const[, R1_symbols]
R2 <- SP500_const[, R2_symbols]
common_dates <- complete.cases(R1, R2)
R1 <- R1[common_dates, ]
R2 <- R2[common_dates, ]
R1 <- CalculateReturns(R1, "discrete")[-1]
R2 <- CalculateReturns(R2, "discrete")[-1]
# Run spanning tests
f1_result <- span_f1(R1, R2)
f1_result
f2_result <- span_f2(R1, R2)
bj_result <- span_bj(R1, R2)
grs_result <- span_grs(R1, R2)
hk_result  <- span_hk(R1, R2)
km_result <- span_km(R1, R2)
py_result  <- span_py(R1, R2)
gl_a_result  <- span_gl_a(R1, R2, control = list(do_trace = FALSE))
gl_a_result  <- span_gl_a(R1, R2, control = list(do_trace = FALSE))
gl_ad_result  <- span_gl_ad(R1, R2, control = list(do_trace = FALSE))
as_result <- span_as(R1, R2)
R1[,-1]
dim(R1[,-1])
dim(R1[,1])
str(R1)
